from openai import OpenAI
import re
from enum import Enum, auto
from enums import AIMode
import config
import datetime
import json
from colorama import Fore, Back, Style, init

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º colorama
init(autoreset=True)

def _llm_log(message: str, level: str = "INFO", request_id: str = None):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π LLM —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π, —Ü–≤–µ—Ç–∞–º–∏ –∏ —ç–º–æ–¥–∑–∏."""
    try:
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        req_info = f" [Req: {request_id}]" if request_id else ""
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏ —ç–º–æ–¥–∑–∏ –¥–ª—è —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        if level == "INFO":
            color = Fore.CYAN
            emoji = "ü§ñ"
        elif level == "WARNING":
            color = Fore.YELLOW
            emoji = "‚ö†Ô∏è"
        elif level == "ERROR":
            color = Fore.RED
            emoji = "üö®"
        elif level == "SUCCESS":
            color = Fore.GREEN
            emoji = "‚ú®"
        elif level == "DEBUG":
            color = Fore.MAGENTA
            emoji = "üîß"
        else:
            color = Fore.WHITE
            emoji = "ü§ñ"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        timestamp_colored = f"{Fore.BLUE}[{timestamp}]"
        level_colored = f"{color}[{emoji} LLM-{level}]"
        req_colored = f"{Fore.YELLOW}{req_info}" if request_id else ""
        message_colored = f"{Style.BRIGHT}{message}{Style.RESET_ALL}"
        
        print(f"{timestamp_colored} {level_colored}{req_colored} {message_colored}")
    except Exception as e:
        print(f"{Fore.RED}üö® –û—à–∏–±–∫–∞ LLM –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {e}{Style.RESET_ALL}")


class ResponseType(Enum):
    """–¢–∏–ø –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏."""
    CALCULATION = auto()  # –¢–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π –æ—Ç–≤–µ—Ç
    EXPLANATION = auto()  # –†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
    CONCISE = auto()      # –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç

class LLM:
    ROLES = {
        "math teacher": {
            "base": "–¢—ã –æ–ø—ã—Ç–Ω—ã–π —É—á–∏—Ç–µ–ª—å –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –∏—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –¥–ª—è –≤–∞–∂–Ω–æ–≥–æ, *–∫—É—Ä—Å–∏–≤* –¥–ª—è –∞–∫—Ü–µ–Ω—Ç–æ–≤, `–∫–æ–¥` –¥–ª—è —Ñ–æ—Ä–º—É–ª. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! –ü–∏—à–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Å—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –≤ `–æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö`.",
            "calculation": "–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –¢–û–õ–¨–ö–û –∏—Ç–æ–≥–æ–≤—ã–π —á–∏—Å–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞. –¢–æ–ª—å–∫–æ —á–∏—Å–ª–æ.",
            "explanation": "–û–±—ä—è—Å–Ω–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏—é –ø–æ–¥—Ä–æ–±–Ω–æ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏, –ø–æ—à–∞–≥–æ–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: **–∑–∞–≥–æ–ª–æ–≤–∫–∏** –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤, *–∫—É—Ä—Å–∏–≤* –¥–ª—è —Ç–µ—Ä–º–∏–Ω–æ–≤, `—Ñ–æ—Ä–º—É–ª—ã` –≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $)! –ü–∏—à–∏ —Ñ–æ—Ä–º—É–ª—ã –ø—Ä–æ—Å—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º. –†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ.",
            "concise": "–î–∞–π –∫—Ä–∞—Ç–∫–∏–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ —Å Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $)!"
        }
    }

    def __init__(self):
        _llm_log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LLM –∫–ª–∞—Å—Å–∞...")
        try:
            self.client = OpenAI(api_key=config.OPENAI_API_KEY)
            self.model_name = config.OPENAI_MODEL
            _llm_log(f"‚úÖ OpenAI –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –º–æ–¥–µ–ª—å—é: {self.model_name}", "SUCCESS")
        except Exception as e:
            _llm_log(f"üí• –û–®–ò–ë–ö–ê –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ OpenAI –∫–ª–∏–µ–Ω—Ç–∞: {e}", "ERROR")
            self.client = None
            self.model_name = "gpt-4o-mini"

        self.role = ""
        self.task = ""
        self.prompt = ""
        self.response_type = ResponseType.EXPLANATION  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
        self.request_id = None  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤

    def _generate_request_id(self) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞."""
        import time
        return f"{int(time.time() * 1000)}"

    def set_role(self, role: str) -> None:
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–æ–ª—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ 'math teacher')."""
        _llm_log(f"üé≠ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–æ–ª–∏: {role}")
        if role not in self.ROLES:
            _llm_log(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Ä–æ–ª—å: {role}", "ERROR")
            raise ValueError("Unsupported model role selected")
        self.role = self.ROLES[role]["base"]
        _llm_log(f"‚úÖ –†–æ–ª—å —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {role}", "SUCCESS")

    def set_response_type(self, response_type: ResponseType) -> None:
        """–ú–µ–Ω—è–µ—Ç —Ç–∏–ø –æ—Ç–≤–µ—Ç–∞ –º–æ–¥–µ–ª–∏ (–≤–ª–∏—è–µ—Ç –Ω–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞)."""
        self.response_type = response_type

    def calculate(self, expression: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –±–µ–∑ –ø–æ—è—Å–Ω–µ–Ω–∏–π."""
        self.response_type = ResponseType.CALCULATION
        expression = self._normalize_expression(expression)
        self.task = f"Calculate: {expression}"
        self._update_prompt()
        return self.run()

    def explain(self, topic: str) -> str:
        """–ü–∏—à–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ–º—ã —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ —à–∞–≥–∞–º–∏."""
        self.response_type = ResponseType.EXPLANATION
        self.task = f"Explain: {topic}"
        self._update_prompt()
        return self.run()

    def ask(self, question: str) -> str:
        """–î–∞—ë—Ç –∫—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å."""
        self.response_type = ResponseType.CONCISE
        self.task = question
        self._update_prompt()
        return self.run()

    def _update_prompt(self):
        if self.response_type == ResponseType.CALCULATION:
            instruction = self.ROLES["math teacher"]["calculation"]
        elif self.response_type == ResponseType.EXPLANATION:
            instruction = self.ROLES["math teacher"]["explanation"]
        else:
            instruction = self.ROLES["math teacher"]["concise"]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        self.role = f"{self.ROLES['math teacher']['base']} {instruction}"

    def _normalize_expression(self, expr: str) -> str:
        """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –≤ —Ñ–æ—Ä–º—É, –ø–æ–Ω—è—Ç–Ω—É—é –º–æ–¥–µ–ª–∏."""
        expr = expr.lower().strip()
        replacements = {
            "squared": "^2",
            "cubed": "^3",
            "to the power of": "^",
            "square root of": "sqrt",
            "divided by": "/",
            "times": "*"
        }
        for k, v in replacements.items():
            expr = expr.replace(k, v)
        return expr

    def run(self) -> str:
        self.request_id = self._generate_request_id()
        _llm_log(f"üöÄ –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞", request_id=self.request_id)
        
        try:
            if self.client is None:
                _llm_log("üö® –û–®–ò–ë–ö–ê: OpenAI –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω", "ERROR", self.request_id)
                return "OpenAI –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á."
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Chat Completions API
            messages = [
                {"role": "system", "content": self.role},
                {"role": "user", "content": self.task}
            ]
            
            _llm_log(f"üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ –º–æ–¥–µ–ª–∏ {self.model_name}", request_id=self.request_id)
            _llm_log(f"üé≠ –°–∏—Å—Ç–µ–º–∞ —Ä–æ–ª—å: {self.role[:100]}...", request_id=self.request_id, level="DEBUG")
            _llm_log(f"üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: {self.task[:200]}...", request_id=self.request_id, level="DEBUG")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–æ–¥–µ–ª–∏
            # –ú–æ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç max_completion_tokens –≤–º–µ—Å—Ç–æ max_tokens
            newer_models = [
                "gpt-4o", "gpt-4o-mini", "gpt-4o-2024", 
                "o1-preview", "o1-mini", "o1",
                "gpt-5", "gpt-5-mini",  # –ù–∞ —Å–ª—É—á–∞–π –±—É–¥—É—â–∏—Ö –º–æ–¥–µ–ª–µ–π
                "chatgpt-4o-latest"
            ]
            uses_max_completion_tokens = any(model_pattern in self.model_name.lower() for model_pattern in newer_models)
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
            api_params = {
                "model": self.model_name,
                "messages": messages,
                "temperature": 0.7
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤
            if uses_max_completion_tokens:
                api_params["max_completion_tokens"] = 1000
                token_param = "max_completion_tokens"
            else:
                api_params["max_tokens"] = 1000
                token_param = "max_tokens"
            
            # –õ–æ–≥–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
            request_params = {
                "model": self.model_name,
                token_param: 1000,
                "temperature": 0.7,
                "messages_count": len(messages),
                "uses_new_api": uses_max_completion_tokens
            }
            _llm_log(f"‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞: {json.dumps(request_params, ensure_ascii=False)}", request_id=self.request_id, level="DEBUG")
            
            start_time = datetime.datetime.now()
            _llm_log("üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenAI API...", request_id=self.request_id)
            
            response = self.client.chat.completions.create(**api_params)
            
            end_time = datetime.datetime.now()
            duration = (end_time - start_time).total_seconds()
            _llm_log(f"‚ö° –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∑–∞ {duration:.2f} —Å–µ–∫—É–Ω–¥", request_id=self.request_id, level="SUCCESS")
            
            # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–≤–µ—Ç–µ
            usage = response.usage
            if usage:
                _llm_log(f"üí∞ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ - Prompt: {usage.prompt_tokens}, Completion: {usage.completion_tokens}, Total: {usage.total_tokens}", request_id=self.request_id)
            
            response_text = response.choices[0].message.content
            _llm_log(f"üìè –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: {len(response_text)} —Å–∏–º–≤–æ–ª–æ–≤", request_id=self.request_id)
            _llm_log(f"üìÑ –ù–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞: {response_text[:200]}...", request_id=self.request_id, level="DEBUG")
            
            if self.response_type == ResponseType.CALCULATION:
                _llm_log("üî¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —á–∏—Å–ª–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –æ—Ç–≤–µ—Ç–∞", request_id=self.request_id)
                extracted = self._extract_number(response_text)
                _llm_log(f"üéØ –ò–∑–≤–ª–µ—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ: {extracted}", request_id=self.request_id)
                return extracted
                
            _llm_log("‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω", request_id=self.request_id, level="SUCCESS")
            return response_text
            
        except Exception as e:
            _llm_log(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê OpenAI API: {e}", "ERROR", self.request_id)
            error_msg = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ AI: {e}"
            _llm_log(f"üö® –í–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: {error_msg}", "ERROR", self.request_id)
            return error_msg

    def _extract_number(self, text: str) -> str:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç —á–∏—Å–ª–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –æ—Ç–≤–µ—Ç–∞"""
        matches = re.findall(r"-?\d+\.?\d*", text)
        return matches[0] if matches else "Could not extract number"

    def respond(self, mode: AIMode | None, user_text: str) -> str:
        """–§–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –ø–æ —Ä–µ–∂–∏–º—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏."""
        _llm_log(f"üéØ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ respond –¥–ª—è —Ä–µ–∂–∏–º–∞: {mode}")
        _llm_log(f"üí¨ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ–∫—Å—Ç: {user_text[:100]}...", level="DEBUG")
        
        try:
            prompt = self._build_prompt(mode, user_text)
            _llm_log(f"üìù –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç: {prompt[:200]}...", level="DEBUG")
            
            answer = self.ask(prompt)
            _llm_log(f"üìÑ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç, –¥–ª–∏–Ω–∞: {len(answer)} —Å–∏–º–≤–æ–ª–æ–≤", level="SUCCESS")
            
            if mode == AIMode.GENERATE_TASK:
                _llm_log("üßπ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–¥–∞—á")
                sanitized = self._sanitize_generated_task(answer)
                _llm_log(f"‚ú® –°–∞–Ω–∏—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {sanitized[:100]}...")
                return sanitized
            
            _llm_log("üì§ –í–æ–∑–≤—Ä–∞—Ç –æ–±—ã—á–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –±–µ–∑ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏")
            return answer
        except Exception as e:
            _llm_log(f"üí• –û–®–ò–ë–ö–ê –≤ LLM.respond: {e}", "ERROR")
            return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ AI"

    @staticmethod
    def _build_prompt(mode: AIMode | None, text: str) -> str:
        """–°–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–º–ø—Ç –∫ LLM –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ AI."""
        try:
            if mode == AIMode.HELP_PROBLEM:
                return f"–†–µ—à–∏ –ø–æ—à–∞–≥–æ–≤–æ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É, –æ–±—ä—è—Å–Ω—è—è –∫–∞–∂–¥—ã–π —à–∞–≥ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: **–®–∞–≥ 1**, **–®–∞–≥ 2** –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, `—Ñ–æ—Ä–º—É–ª—ã` –≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! –ü–∏—à–∏ —Ñ–æ—Ä–º—É–ª—ã –ø—Ä–æ—Å—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º. –ó–∞–¥–∞—á–∞: {text}"
            if mode == AIMode.EXPLAIN:
                return f"–ü–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ç–µ–º—É –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: **–∑–∞–≥–æ–ª–æ–≤–∫–∏** –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤, *–∫—É—Ä—Å–∏–≤* –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤, `—Ñ–æ—Ä–º—É–ª—ã` –≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! –ü–∏—à–∏ —Ñ–æ—Ä–º—É–ª—ã –ø—Ä–æ—Å—Ç—ã–º —Ç–µ–∫—Å—Ç–æ–º. –í–∫–ª—é—á–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã, –ø—Ä–∏–º–µ—Ä—ã –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ. –¢–µ–º–∞: {text}"
            if mode == AIMode.TIPS:
                return f"–î–∞–π 5-7 –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–≤–µ—Ç–æ–≤ –ø–æ –∏–∑—É—á–µ–Ω–∏—é —Ç–µ–º—ã. –ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: **–∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç** –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Å–æ–≤–µ—Ç–æ–≤, –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! –°–æ–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –∏ –ø—Ä–∏–º–µ–Ω–∏–º—ã–º–∏. –¢–µ–º–∞: {text}"
            if mode == AIMode.PLAN:
                return f"–°–æ—Å—Ç–∞–≤—å –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω –∏–∑—É—á–µ–Ω–∏—è —Ç–µ–º—ã –Ω–∞ 2-3 –Ω–µ–¥–µ–ª–∏. –ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: **–ù–µ–¥–µ–ª—è 1**, **–î–µ–Ω—å 1** –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! –†–∞–∑–±–µ–π –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏. –¢–µ–º–∞: {text}"
            if mode == AIMode.CHECK_SOLUTION:
                return (
                    "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ—à–µ–Ω–∏–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏. –ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: "
                    "**–ê–Ω–∞–ª–∏–∑ —Ä–µ—à–µ–Ω–∏—è**, **–û—à–∏–±–∫–∏** (–µ—Å–ª–∏ –µ—Å—Ç—å), **–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ** –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, "
                    "`—Ñ–æ—Ä–º—É–ª—ã` –≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∫–∞–∂–¥–æ–≥–æ —à–∞–≥–∞, —É–∫–∞–∂–∏ –æ—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. "
                    f"–†–µ—à–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {text}"
                )
            if mode == AIMode.PRACTICE:
                return (
                    "–°–æ–∑–¥–∞–π 3 –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–µ–º–µ —Å —Ä–∞–∑–Ω—ã–º —É—Ä–æ–≤–Ω–µ–º —Å–ª–æ–∂–Ω–æ—Å—Ç–∏. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: **–ó–∞–¥–∞—á–∞ 1** (–ª–µ–≥–∫–∞—è), **–ó–∞–¥–∞—á–∞ 2** (—Å—Ä–µ–¥–Ω—è—è), **–ó–∞–¥–∞—á–∞ 3** (—Å–ª–æ–∂–Ω–∞—è) –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, "
                    "`—Ñ–æ—Ä–º—É–ª—ã` –≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–ó–∞—Ç–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ —Ä–∞–∑–¥–µ–ª **–û—Ç–≤–µ—Ç—ã** —Å –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–∏—Å–∫–æ–º. "
                    f"–¢–µ–º–∞: {text}"
                )
            if mode == AIMode.GENERATE_TASK:
                return (
                    "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –æ–¥–Ω—É –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–∞–¥–∞—á—É —Å—Ä–µ–¥–Ω–µ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–µ–º–µ. "
                    "–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: —Ç–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏ –±–µ–∑ —Ä–µ—à–µ–Ω–∏—è –∏ –æ—Ç–≤–µ—Ç–∞. "
                    "–ù–∞—á–Ω–∏ —Å '–ó–∞–¥–∞—á–∞: ' –∏ –Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–µ. "
                    f"–¢–µ–º–∞: {text}"
                )
            
            # –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ä–µ–∂–∏–º—ã –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤ –∞–ª–≥–µ–±—Ä—ã
            if mode == AIMode.COMPUTATIONAL_SKILLS:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –≤ –∞–ª–≥–µ–±—Ä–µ. –í–∫–ª—é—á–∏ —Å–ª–µ–¥—É—é—â–∏–µ —Ç–µ–º—ã: "
                    "**–î–µ–π—Å—Ç–≤–∏—è —Å –¥—Ä–æ–±—è–º–∏** (–æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã–µ –∏ –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ), **—Ä–∞–±–æ—Ç–∞ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏**, "
                    "**–≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å–æ —Å—Ç–µ–ø–µ–Ω—è–º–∏ –∏ –∫–æ—Ä–Ω—è–º–∏**, **–ø–æ—Ä—è–¥–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π**. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø—Ä–∏–≤–µ–¥–∏ 2-3 –ø—Ä–∏–º–µ—Ä–∞ –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–µ–º—ã. "
                    "–ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)!"
                )
            
            if mode == AIMode.EXPRESSION_VALUE:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –∫–∞–∫ –Ω–∞—Ö–æ–¥–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∞–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π. –í–∫–ª—é—á–∏: "
                    "**–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫—É –∑–Ω–∞—á–µ–Ω–∏–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö**, **—É–ø—Ä–æ—â–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–π –ø–µ—Ä–µ–¥ –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π**, "
                    "**—Ä–∞–±–æ—Ç—É —Å–æ —Å–∫–æ–±–∫–∞–º–∏**, **–ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –ø–æ–¥–æ–±–Ω—ã—Ö —Å–ª–∞–≥–∞–µ–º—ã—Ö**. "
                    "–ü–æ–∫–∞–∂–∏ –ø–æ—à–∞–≥–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã—á–∏—Å–ª–µ–Ω–∏–π. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)!"
                )
            
            if mode == AIMode.FORMULAS_WORK:
                return (
                    "–û–±—ä—è—Å–Ω–∏ —Ä–∞–±–æ—Ç—É —Å –∞–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏–º–∏ —Ñ–æ—Ä–º—É–ª–∞–º–∏. –í–∫–ª—é—á–∏: "
                    "**–≤—ã–≤–æ–¥ —Ñ–æ—Ä–º—É–ª –∏–∑ —É—Å–ª–æ–≤–∏–π –∑–∞–¥–∞—á**, **–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º—É–ª**, "
                    "**–≤—ã—Ä–∞–∂–µ–Ω–∏–µ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ**, **–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö —Ñ–æ—Ä–º—É–ª**. "
                    "–ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ —Ñ–∏–∑–∏–∫–∏ –∏ –≥–µ–æ–º–µ—Ç—Ä–∏–∏. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)!"
                )
            
            if mode == AIMode.SHORTHAND_FORMULAS:
                return (
                    "–û–±—ä—è—Å–Ω–∏ —Ñ–æ—Ä–º—É–ª—ã —Å–æ–∫—Ä–∞—â—ë–Ω–Ω–æ–≥–æ —É–º–Ω–æ–∂–µ–Ω–∏—è. –í–∫–ª—é—á–∏ –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–æ—Ä–º—É–ª—ã: "
                    "**–∫–≤–∞–¥—Ä–∞—Ç —Å—É–º–º—ã –∏ —Ä–∞–∑–Ω–æ—Å—Ç–∏**, **—Ä–∞–∑–Ω–æ—Å—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–æ–≤**, **–∫—É–± —Å—É–º–º—ã –∏ —Ä–∞–∑–Ω–æ—Å—Ç–∏**, "
                    "**—Å—É–º–º–∞ –∏ —Ä–∞–∑–Ω–æ—Å—Ç—å –∫—É–±–æ–≤**. –î–ª—è –∫–∞–∂–¥–æ–π —Ñ–æ—Ä–º—É–ª—ã –ø—Ä–∏–≤–µ–¥–∏: "
                    "—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫—É, –∑–∞–ø–∏—Å—å –≤ –æ–±—â–µ–º –≤–∏–¥–µ, 2-3 –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)!"
                )
            
            if mode == AIMode.EQUATIONS:
                return (
                    "–û–±—ä—è—Å–Ω–∏ —Ä–µ—à–µ–Ω–∏–µ –∞–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π. –í–∫–ª—é—á–∏: "
                    "**–ª–∏–Ω–µ–π–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è** (ax + b = 0), **–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è** (—á–µ—Ä–µ–∑ –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞–Ω—Ç –∏ —Ç–µ–æ—Ä–µ–º—É –í–∏–µ—Ç–∞), "
                    "**–Ω–µ–ø–æ–ª–Ω—ã–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è**, **–±–∏–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è**, **—É—Ä–∞–≤–Ω–µ–Ω–∏—è –≤—ã—Å—à–∏—Ö —Å—Ç–µ–ø–µ–Ω–µ–π**. "
                    "–î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –ø—Ä–∏–≤–µ–¥–∏ –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–µ—à–µ–Ω–∏—è –∏ –ø—Ä–∏–º–µ—Ä—ã. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)!"
                )
            
            if mode == AIMode.INEQUALITIES:
                return (
                    "–û–±—ä—è—Å–Ω–∏ —Ä–µ—à–µ–Ω–∏–µ –∞–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏—Ö –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤. –í–∫–ª—é—á–∏: "
                    "**–ª–∏–Ω–µ–π–Ω—ã–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞**, **–∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞** (–º–µ—Ç–æ–¥ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤), "
                    "**—Å–∏—Å—Ç–µ–º—ã –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤**, **–Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞ —Å –º–æ–¥—É–ª–µ–º**. "
                    "–û–±—ä—è—Å–Ω–∏ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —á–∏—Å–ª–æ–≤–æ–π –ø—Ä—è–º–æ–π –∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏. "
                    "–ü—Ä–∏–≤–µ–¥–∏ –ø–æ—à–∞–≥–æ–≤—ã–µ –ø—Ä–∏–º–µ—Ä—ã. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)!"
                )
            
            if mode == AIMode.GRAPHS:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∞–Ω–∞–ª–∏–∑ –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π. –í–∫–ª—é—á–∏: "
                    "**–ª–∏–Ω–µ–π–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏** (y = kx + b), **–∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏** (–ø–∞—Ä–∞–±–æ–ª–∞), "
                    "**–≥–∏–ø–µ—Ä–±–æ–ª–∞** (y = k/x), **–º–æ–¥—É–ª—å** (y = |x|), **–∫–æ—Ä–µ–Ω—å** (y = ‚àöx). "
                    "–î–ª—è –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—ä—è—Å–Ω–∏: –æ–±–ª–∞—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∑–Ω–∞—á–µ–Ω–∏–π, "
                    "–æ—Å–æ–±—ã–µ —Ç–æ—á–∫–∏, –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞. –ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä—ã –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–í–ê–ñ–ù–û: –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å [IMAGE:multiple_graphs] –¥–ª—è —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π."
                )
            
            if mode == AIMode.TRIGONOMETRY:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –æ—Å–Ω–æ–≤—ã —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏–∏. –í–∫–ª—é—á–∏: "
                    "**–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∏–Ω—É—Å–∞, –∫–æ—Å–∏–Ω—É—Å–∞, —Ç–∞–Ω–≥–µ–Ω—Å–∞**, **—Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å**, "
                    "**–æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ç–æ–∂–¥–µ—Å—Ç–≤–∞**, **—Ñ–æ—Ä–º—É–ª—ã –ø—Ä–∏–≤–µ–¥–µ–Ω–∏—è**, "
                    "**–ø—Ä–æ—Å—Ç–µ–π—à–∏–µ —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è**. "
                    "–û–±—ä—è—Å–Ω–∏ —Å–≤—è–∑—å —Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–º —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–º. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–í–ê–ñ–ù–û: –í –Ω–∞—á–∞–ª–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤—å [IMAGE:trigonometric_circle] –¥–ª—è —Ç—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏. "
                    "–ü–æ—Å–ª–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –¥–æ–±–∞–≤—å [IMAGE:trigonometric_functions] –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π."
                )
            
            if mode == AIMode.PROBABILITY:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –æ—Å–Ω–æ–≤—ã —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π. –í–∫–ª—é—á–∏: "
                    "**–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏**, **–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏**, "
                    "**—Ñ–æ—Ä–º—É–ª–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏** (P = m/n), **—Å–ª–æ–∂–µ–Ω–∏–µ –∏ —É–º–Ω–æ–∂–µ–Ω–∏–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π**, "
                    "**—É—Å–ª–æ–≤–Ω–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å**, **–Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–µ —Å–æ–±—ã—Ç–∏—è**. "
                    "–ü—Ä–∏–≤–µ–¥–∏ –ø—Ä–∏–º–µ—Ä—ã —Å –º–æ–Ω–µ—Ç–∞–º–∏, –∏–≥—Ä–∞–ª—å–Ω—ã–º–∏ –∫–æ—Å—Ç—è–º–∏, –∫–∞—Ä—Ç–∞–º–∏. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)!"
                )
            
            # === –ì–ï–û–ú–ï–¢–†–ò–ß–ï–°–ö–ò–ï –†–ï–ñ–ò–ú–´ ===
            
            if mode == AIMode.TRIANGLES:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –≤—Å—ë –æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞—Ö. –í–∫–ª—é—á–∏: "
                    "**–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º** (—Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π, —Ä–∞–≤–Ω–æ–±–µ–¥—Ä–µ–Ω–Ω—ã–π, —Ä–∞–∑–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π), "
                    "**–∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ —É–≥–ª–∞–º** (–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π, –æ—Å—Ç—Ä–æ—É–≥–æ–ª—å–Ω—ã–π, —Ç—É–ø–æ—É–≥–æ–ª—å–Ω—ã–π), "
                    "**—Å–≤–æ–π—Å—Ç–≤–∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤**, **—Å—É–º–º–∞ —É–≥–ª–æ–≤ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞**, "
                    "**—Ç–µ–æ—Ä–µ–º–∞ –ü–∏—Ñ–∞–≥–æ—Ä–∞**, **–º–µ–¥–∏–∞–Ω—ã, –±–∏—Å—Å–µ–∫—Ç—Ä–∏—Å—ã, –≤—ã—Å–æ—Ç—ã**, "
                    "**–ø–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞** (—Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã), **–ø–µ—Ä–∏–º–µ—Ç—Ä —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞**. "
                    "–ü—Ä–∏–≤–µ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏ —Ñ–æ—Ä–º—É–ª—ã. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–í–ê–ñ–ù–û: –í –Ω–∞—á–∞–ª–µ –¥–æ–±–∞–≤—å [IMAGE:triangles_diagram] –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤."
                )
            
            if mode == AIMode.QUADRILATERALS:
                return (
                    "–û–±—ä—è—Å–Ω–∏ —á–µ—Ç—ã—Ä—ë—Ö—É–≥–æ–ª—å–Ω–∏–∫–∏ –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞. –í–∫–ª—é—á–∏: "
                    "**–∫–≤–∞–¥—Ä–∞—Ç** (—Å–≤–æ–π—Å—Ç–≤–∞ –∏ —Ñ–æ—Ä–º—É–ª—ã), **–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫** (—Å–≤–æ–π—Å—Ç–≤–∞ –∏ —Ñ–æ—Ä–º—É–ª—ã), "
                    "**—Ä–æ–º–±** (—Å–≤–æ–π—Å—Ç–≤–∞ –∏ —Ñ–æ—Ä–º—É–ª—ã), **–ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–º** (—Å–≤–æ–π—Å—Ç–≤–∞ –∏ —Ñ–æ—Ä–º—É–ª—ã), "
                    "**—Ç—Ä–∞–ø–µ—Ü–∏—è** (—Å–≤–æ–π—Å—Ç–≤–∞ –∏ —Ñ–æ—Ä–º—É–ª—ã), **–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π —á–µ—Ç—ã—Ä—ë—Ö—É–≥–æ–ª—å–Ω–∏–∫**, "
                    "**–ø–ª–æ—â–∞–¥–∏ —á–µ—Ç—ã—Ä—ë—Ö—É–≥–æ–ª—å–Ω–∏–∫–æ–≤**, **–ø–µ—Ä–∏–º–µ—Ç—Ä—ã —á–µ—Ç—ã—Ä—ë—Ö—É–≥–æ–ª—å–Ω–∏–∫–æ–≤**, "
                    "**–¥–∏–∞–≥–æ–Ω–∞–ª–∏ –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞**, **—É–≥–ª—ã —á–µ—Ç—ã—Ä—ë—Ö—É–≥–æ–ª—å–Ω–∏–∫–æ–≤**. "
                    "–ü—Ä–∏–≤–µ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã—á–∏—Å–ª–µ–Ω–∏–π. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–í–ê–ñ–ù–û: –í –Ω–∞—á–∞–ª–µ –¥–æ–±–∞–≤—å [IMAGE:quadrilaterals_diagram] –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ —á–µ—Ç—ã—Ä—ë—Ö—É–≥–æ–ª—å–Ω–∏–∫–æ–≤."
                )
            
            if mode == AIMode.CIRCLES:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å –∏ –∫—Ä—É–≥. –í–∫–ª—é—á–∏: "
                    "**–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∏ –∫—Ä—É–≥–∞**, **—Ü–µ–Ω—Ç—Ä, —Ä–∞–¥–∏—É—Å, –¥–∏–∞–º–µ—Ç—Ä**, "
                    "**—Ö–æ—Ä–¥–∞, —Å–µ–∫—É—â–∞—è, –∫–∞—Å–∞—Ç–µ–ª—å–Ω–∞—è**, **–¥—É–≥–∞ –∏ —Å–µ–∫—Ç–æ—Ä**, "
                    "**–¥–ª–∏–Ω–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏** (C = 2œÄr), **–ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞** (S = œÄr¬≤), "
                    "**—Å–≤–æ–π—Å—Ç–≤–∞ –∫–∞—Å–∞—Ç–µ–ª—å–Ω—ã—Ö**, **—Å–≤–æ–π—Å—Ç–≤–∞ —Ö–æ—Ä–¥**, **—É–≥–ª—ã –≤ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏**, "
                    "**–≤–ø–∏—Å–∞–Ω–Ω—ã–µ –∏ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–µ —É–≥–ª—ã**, **–≤–ø–∏—Å–∞–Ω–Ω—ã–µ –∏ –æ–ø–∏—Å–∞–Ω–Ω—ã–µ –º–Ω–æ–≥–æ—É–≥–æ–ª—å–Ω–∏–∫–∏**. "
                    "–ü—Ä–∏–≤–µ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã—á–∏—Å–ª–µ–Ω–∏–π. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–í–ê–ñ–ù–û: –í –Ω–∞—á–∞–ª–µ –¥–æ–±–∞–≤—å [IMAGE:circle_diagram] –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏."
                )
            
            if mode == AIMode.AREAS_VOLUMES:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–µ–π –∏ –æ–±—ä—ë–º–æ–≤. –í–∫–ª—é—á–∏: "
                    "**–ü–õ–û–©–ê–î–ò**: –∫–≤–∞–¥—Ä–∞—Ç (S = a¬≤), –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (S = ab), —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ (S = ¬Ωah), "
                    "–∫—Ä—É–≥ (S = œÄr¬≤), –ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–º, —Ä–æ–º–±, —Ç—Ä–∞–ø–µ—Ü–∏—è. "
                    "**–û–ë–™–Å–ú–´**: –∫—É–± (V = a¬≥), –ø–∞—Ä–∞–ª–ª–µ–ª–µ–ø–∏–ø–µ–¥ (V = abc), —Ü–∏–ª–∏–Ω–¥—Ä (V = œÄr¬≤h), "
                    "–∫–æ–Ω—É—Å (V = ‚ÖìœÄr¬≤h), —Å—Ñ–µ—Ä–∞ (V = ‚Å¥‚ÅÑ‚ÇÉœÄr¬≥), –ø–∏—Ä–∞–º–∏–¥–∞ (V = ‚ÖìS–æ—Å–Ωh). "
                    "**–ï–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è**, **–ø—Ä–∏–º–µ—Ä—ã –∑–∞–¥–∞—á**, **–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ**. "
                    "–ü—Ä–∏–≤–µ–¥–∏ –ø–æ—à–∞–≥–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–í–ê–ñ–ù–û: –í –Ω–∞—á–∞–ª–µ –¥–æ–±–∞–≤—å [IMAGE:areas_volumes_diagram] –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ —Ñ–æ—Ä–º—É–ª."
                )
            
            if mode == AIMode.COORDINATE_GEOMETRY:
                return (
                    "–û–±—ä—è—Å–Ω–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω—É—é –≥–µ–æ–º–µ—Ç—Ä–∏—é. –í–∫–ª—é—á–∏: "
                    "**–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—è –ø–ª–æ—Å–∫–æ—Å—Ç—å** (–æ—Å–∏ x –∏ y, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–µ–∫), "
                    "**—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏** (—Ñ–æ—Ä–º—É–ª–∞ d = ‚àö[(x‚ÇÇ-x‚ÇÅ)¬≤ + (y‚ÇÇ-y‚ÇÅ)¬≤]), "
                    "**—Å–µ—Ä–µ–¥–∏–Ω–∞ –æ—Ç—Ä–µ–∑–∫–∞** (—Ñ–æ—Ä–º—É–ª–∞), **—É—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä—è–º–æ–π** (y = kx + b), "
                    "**—É—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏** ((x-a)¬≤ + (y-b)¬≤ = r¬≤), "
                    "**—É—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–±–æ–ª—ã** (y = ax¬≤ + bx + c), **–ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤**, "
                    "**–ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –ø—Ä—è–º—ã—Ö**, **—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç —Ç–æ—á–∫–∏ –¥–æ –ø—Ä—è–º–æ–π**. "
                    "–ü—Ä–∏–≤–µ–¥–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π. "
                    "–ò—Å–ø–æ–ª—å–∑—É–π Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ. –ù–ï –∏—Å–ø–æ–ª—å–∑—É–π LaTeX ($$ –∏–ª–∏ $ —Å–∏–º–≤–æ–ª—ã)! "
                    "–í–ê–ñ–ù–û: –í –Ω–∞—á–∞–ª–µ –¥–æ–±–∞–≤—å [IMAGE:coordinate_geometry_diagram] –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏."
                )
            
            return text
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–º–ø—Ç–∞ –≤ LLM: {e}")
            return text

    @staticmethod
    def _sanitize_generated_task(raw_text: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∑ –æ—Ç–≤–µ—Ç–∞ LLM —Ç–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–µ –∑–∞–¥–∞—á–∏.

        - –ï—Å–ª–∏ –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞, –Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å '–ó–∞–¥–∞—á–∞:', –±–µ—Ä—ë–º –µ—ë –∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –¥–æ –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏.
        - –£–¥–∞–ª—è–µ–º –±–ª–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å '–†–µ—à–µ–Ω–∏–µ', '–ü—Ä–∏–º–µ—Ä', '–í–∏–¥', 'Answer', 'Program', '–ü—Ä–æ–≥—Ä–∞–º–º–∞', '–û—Ç–≤–µ—Ç'.
        - –ï—Å–ª–∏ '–ó–∞–¥–∞—á–∞:' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –±–µ—Ä—ë–º –ø–µ—Ä–≤—É—é —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å '–ó–∞–¥–∞—á–∞: '.
        - –û–±—Ä–µ–∑–∞–µ–º –¥–æ 3‚Äì4 —Å—Ç—Ä–æ–∫ –º–∞–∫—Å–∏–º—É–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞.
        """
        try:
            if not isinstance(raw_text, str):
                return "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É"
            lines = [ln.strip() for ln in raw_text.strip().splitlines()]
            drop_prefixes = (
                "—Ä–µ—à–µ–Ω–∏–µ", "–ø—Ä–∏–º–µ—Ä", "–≤–∏–¥", "answer", "program", "–ø—Ä–æ–≥—Ä–∞–º–º–∞", "–æ—Ç–≤–µ—Ç"
            )
            filtered = []
            skip = False
            for ln in lines:
                low = ln.lower()
                if any(low.startswith(pfx) for pfx in drop_prefixes):
                    skip = True
                if skip:
                    if ln == "":
                        skip = False
                    continue
                filtered.append(ln)

            start_idx = next((i for i, ln in enumerate(filtered) if ln.lower().startswith("–∑–∞–¥–∞—á–∞:")), None)
            if start_idx is not None:
                result_block = []
                for ln in filtered[start_idx:]:
                    if ln == "":
                        break
                    result_block.append(ln)
                result_block = result_block[:4]
                return "\n".join(result_block) if result_block else filtered[start_idx]

            first = next((ln for ln in filtered if ln), "")
            if not first:
                return "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É"
            if not first.lower().startswith("–∑–∞–¥–∞—á–∞:"):
                first = f"–ó–∞–¥–∞—á–∞: {first}"
            return first
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∑–∞–¥–∞—á–∏ –≤ LLM: {e}")
            return "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á—É"
