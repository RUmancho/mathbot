"""
Примеры использования LLM в проекте MathBot

Этот файл содержит примеры того, как можно интегрировать LLM
в различные функции бота для учителей и студентов.
"""

from LLM import LLM
from functional import Teacher, Student

def example_teacher_usage():
    """Примеры использования LLM для учителей"""
    
    # Создание экземпляра учителя
    teacher = Teacher("teacher_id", None)
    
    # 1. Генерация индивидуального задания
    print("=== Генерация индивидуального задания ===")
    teacher.generate_individual_task()
    
    # 2. Генерация задания для класса
    print("\n=== Генерация задания для класса ===")
    teacher.generate_class_task()
    
    # 3. Проверка решения студента
    print("\n=== Проверка решения студента ===")
    task = "Решите уравнение: 2x + 5 = 13"
    student_solution = "2x + 5 = 13\n2x = 13 - 5\n2x = 8\nx = 4"
    result = teacher.check_solution_with_llm(student_solution, task)
    print(f"Результат проверки: {result}")
    
    # 4. Анализ прогресса студента
    print("\n=== Анализ прогресса студента ===")
    student_id = "student_123"
    analysis = teacher.get_student_progress_analysis(student_id)
    print(f"Анализ прогресса: {analysis}")
    
    # 5. Создание персонализированного объяснения
    print("\n=== Персонализированное объяснение ===")
    topic = "Квадратные уравнения"
    level = "средний"
    explanation = teacher.create_personalized_explanation(topic, level)
    print(f"Объяснение: {explanation}")

def example_student_usage():
    """Примеры использования LLM для студентов"""
    
    # Создание экземпляра студента
    student = Student("student_id", None)
    
    # 1. Получение помощи с задачей
    print("=== Помощь с задачей ===")
    question = "Как решить квадратное уравнение x² + 5x + 6 = 0?"
    student.get_math_help(question)
    
    # 2. Проверка собственного решения
    print("\n=== Проверка собственного решения ===")
    task = "Найдите корни уравнения: x² - 4x + 3 = 0"
    my_solution = "x² - 4x + 3 = 0\n(x-1)(x-3) = 0\nx = 1 или x = 3"
    student.check_my_solution(task, my_solution)
    
    # 3. Получение задач для практики
    print("\n=== Задачи для практики ===")
    topic = "Квадратные уравнения"
    difficulty = "средний"
    student.get_practice_tasks(topic, difficulty)
    
    # 4. Объяснение теории
    print("\n=== Объяснение теории ===")
    topic = "Формулы сокращенного умножения"
    student.get_theory_explanation(topic)
    
    # 5. Персональный план обучения
    print("\n=== Персональный план обучения ===")
    weak_topics = ["Квадратные уравнения", "Тригонометрия", "Логарифмы"]
    student.get_study_plan(weak_topics)
    
    # 6. Полезные советы
    print("\n=== Полезные советы ===")
    student.get_math_tips()

def example_advanced_llm_usage():
    """Примеры продвинутого использования LLM"""
    
    llm = LLM()
    
    # 1. Создание адаптивного теста
    print("=== Создание адаптивного теста ===")
    prompt = """
    Создай адаптивный математический тест для ученика 9 класса.
    Тест должен включать:
    - 5 вопросов разной сложности
    - Вопросы по алгебре и геометрии
    - Критерии оценки
    - Рекомендации по подготовке
    """
    response = llm.request(prompt)
    print(f"Адаптивный тест: {response}")
    
    # 2. Анализ типичных ошибок
    print("\n=== Анализ типичных ошибок ===")
    prompt = """
    Проанализируй типичные ошибки учеников при решении квадратных уравнений.
    Включи:
    - Наиболее частые ошибки
    - Причины ошибок
    - Способы их предотвращения
    - Упражнения для закрепления
    """
    response = llm.request(prompt)
    print(f"Анализ ошибок: {response}")
    
    # 3. Создание мотивирующего контента
    print("\n=== Мотивирующий контент ===")
    prompt = """
    Создай мотивирующий текст для ученика, который испытывает трудности с математикой.
    Текст должен:
    - Быть поддерживающим
    - Включать практические советы
    - Содержать примеры успеха
    - Мотивировать к дальнейшему изучению
    """
    response = llm.request(prompt)
    print(f"Мотивирующий текст: {response}")

def example_integration_scenarios():
    """Сценарии интеграции LLM в существующий функционал"""
    
    # Сценарий 1: Автоматическая проверка домашних заданий
    print("=== Сценарий: Автоматическая проверка ДЗ ===")
    teacher = Teacher("teacher_id", None)
    
    # Учитель получает решение от студента
    homework_solution = """
    Задача: Решите систему уравнений:
    2x + y = 5
    x - y = 1
    
    Решение:
    Из второго уравнения: y = x - 1
    Подставляем в первое: 2x + (x-1) = 5
    3x - 1 = 5
    3x = 6
    x = 2
    y = 2 - 1 = 1
    Ответ: (2, 1)
    """
    
    # LLM автоматически проверяет решение
    feedback = teacher.check_solution_with_llm(
        homework_solution, 
        "Решите систему уравнений: 2x + y = 5, x - y = 1"
    )
    print(f"Обратная связь: {feedback}")
    
    # Сценарий 2: Персонализированная помощь студенту
    print("\n=== Сценарий: Персонализированная помощь ===")
    student = Student("student_id", None)
    
    # Студент задает вопрос
    question = "Почему при решении квадратного уравнения нужно проверять дискриминант?"
    help_response = student.get_math_help(question)
    
    # Сценарий 3: Анализ успеваемости класса
    print("\n=== Сценарий: Анализ успеваемости класса ===")
    llm = LLM()
    
    class_data = """
    Класс 9А, 25 учеников
    Средний балл по алгебре: 3.8
    Средний балл по геометрии: 3.5
    Наиболее сложные темы: тригонометрия, логарифмы
    """
    
    prompt = f"""
    Проанализируй успеваемость класса и дай рекомендации учителю:
    {class_data}
    
    Включи:
    - Анализ сильных и слабых сторон
    - Рекомендации по улучшению
    - План работы с отстающими
    - Методы мотивации
    """
    
    analysis = llm.request(prompt)
    print(f"Анализ класса: {analysis}")

if __name__ == "__main__":
    print("Примеры использования LLM в MathBot")
    print("=" * 50)
    
    print("\n1. Примеры для учителей:")
    example_teacher_usage()
    
    print("\n2. Примеры для студентов:")
    example_student_usage()
    
    print("\n3. Продвинутые примеры:")
    example_advanced_llm_usage()
    
    print("\n4. Сценарии интеграции:")
    example_integration_scenarios() 